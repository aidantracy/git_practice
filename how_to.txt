***************************************************************
** How to first link project using git and storing on github **
***************************************************************
step 1. Create a new repository on github.
Step 2. create a location to store your project on your local system. 
step 3. using gitbash, navigate to the location of where your project is.
Step 4. in github, copy the url of your repository. 
step 5. in gitbash, use command and past:  git clone <url of repository> 
step 6. cd into the new file on your local machine

You should now be able to run git commands from this repository 
Assuming git is already installed on your local machine.


**************************************************************
git commands
**************************************************************

git log 

- Shows all commits made in this repository 


git status 

- shows if files are currently untracked/tracked and displays a command to restore files if necessary


git add <file>    or     git add .

- this command will stage specified untracked files or all untracked files


git commit -m "<message>" 

- This will log a commit containing the authors name, email, date, checksum hash, and message. This will  move the pointer containing "HEAD" forward.

git push

- This will push all commits to the github repository.

git branch 

- This shows all current branches 


git branch <branchName> 

- This will create a new branch named <branchName> 

git checkout -b <branchName> 

- This will create and switch to the new branch <branchName> 

git log --oneline --decorate --graph --all 

- If there are multiple branches and commits with different branches, this will show a nice model of those branches.




************************************************************************************************
************************************ Merging Branches ******************************************
************************************************************************************************

Step 1. Create a new branch and switch to it: git checkout -b <newBranch> 
step 2. Do you work that you need to do in the project
step 3. Stage and commit work. 
Step 4. Switch back to the master branch: git checkout master
step 5. merge the branch to the master : git merge <newBranch>  

If you need to delete the branch: git branch -d <newBranch> 

************************************************************************************************



